{"ast":null,"code":"var _jsxFileName = \"C:\\\\HUTECH\\\\Nam4\\\\Java\\\\Workspace\\\\java-web\\\\fe\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FormContainer from '../components/FormContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserWithAdmin } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const userUpdateWAdmin = useSelector(state => state.userUpdateWithAdmin);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = userUpdateWAdmin;\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      history.push(\"/users\");\n    }\n\n    if (!user.name || user.id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [history, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUserWithAdmin({\n      idCurrent: userInfo.id,\n      id: userId,\n      name,\n      email,\n      isAdmin,\n      address: user.address,\n      district: user.district,\n      city: user.city,\n      password: ''\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/users\",\n      className: \"btn btn-light py-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Th\\xF4ng tin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"T\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Nh\\u1EADp t\\xEAn\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Nh\\u1EADp email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"C\\u1EADp nh\\u1EADt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"emhFAnq1mz7Y53ilmosxwM1bqSw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/HUTECH/Nam4/Java/Workspace/java-web/fe/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","Button","Form","Row","Col","useDispatch","useSelector","Link","FormContainer","Message","Loader","getUserDetails","updateUserWithAdmin","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","dispatch","email","setEmail","name","setName","isAdmin","setIsAdmin","userLogin","state","userInfo","userDetails","userUpdateWAdmin","userUpdateWithAdmin","loading","loadingUpdate","success","successUpdate","error","errorUpdate","user","type","push","submitHandler","e","preventDefault","idCurrent","address","district","city","password","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserWithAdmin } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstant';\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const userUpdateWAdmin=useSelector(state=>state.userUpdateWithAdmin)\r\n  const {loading:loadingUpdate,success:successUpdate,error:errorUpdate}=userUpdateWAdmin\r\n  const { loading, error, user } = userDetails;\r\n  useEffect(() => {\r\n    if(successUpdate){\r\n      dispatch({type:USER_UPDATE_RESET})\r\n      history.push(\"/users\")\r\n    }\r\n    if(!user.name || user.id !== userId){\r\n      dispatch(getUserDetails(userId))\r\n    }else{\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [history,user]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserWithAdmin({idCurrent:userInfo.id,id:userId,name,email,isAdmin,address:user.address,district:user.district,city:user.city,password:''}))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/users' className='btn btn-light py-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Thông tin</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <Form.Label>Tên</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Nhập tên'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Nhập email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Admin</Form.Label>\r\n              <Form.Check\r\n                type='checkbox'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            \r\n            <Button type='submit' variant='primary'>\r\n              Cập nhật\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}