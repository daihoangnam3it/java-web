{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../constants/userConstant';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // const { data } = await axios.post(\n    //   `/api/users/login`,\n    //   { email, password },\n    //   config,\n    // );\n\n    const {\n      data\n    } = await axios.post(`https://javawebdoan.herokuapp.com/user/login`, {\n      email,\n      password\n    });\n\n    if (!data.id) {\n      return dispatch({\n        type: USER_LOGIN_FAIL,\n        // payload:error.response && error.response.data.msg\n        payload: \"Sai mật khẩu hoặc tài khoản\"\n      });\n    }\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: USER_DELETE_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    }); // const { data } = await axios.post(`/api/users/register`, {\n    //   name,\n    //   email,\n    //   password,\n    // });\n\n    const {\n      data\n    } = await axios.post(`https://javawebdoan.herokuapp.com/user/register`, {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //   type: USER_LOGIN_SUCCESS,\n    //   payload: data,\n    // });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const detailUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/users/`);\n    const userDetail = data.filter(el => el.id === id);\n    console.log(userDetail);\n    const profile = await axios.get(`/profile/${id}`); // console.log(data);\n\n    const dataUser = { ...userDetail[0],\n      ...profile.data\n    };\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: dataUser\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const updateProfile = info => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // const config={\n    //   headers:{\n    //     'Authorization':userInfo.token\n    //   }\n    // }\n\n    const {\n      data\n    } = await axios.put(`https://javawebdoan.herokuapp.com/user/update/${userInfo.id}`, info\n    /*,config*/\n    );\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const getListUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Authorization': userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users`);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Authorization': userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`https://javawebdoan.herokuapp.com/user/delete/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); // const config = {\n    //   headers: {\n    //     'Authorization':userInfo.token\n    //   },\n    // }\n\n    const {\n      data\n    } = await axios.get(`/users/`);\n    const userDetail = data.filter(el => el.id === id);\n    console.log(userDetail);\n    const profile = await axios.get(`/profile/${id}`); // console.log(data);\n\n    const dataUser = { ...userDetail[0],\n      ...profile.data\n    };\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: dataUser\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const updateUserWithAdmin = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    console.log(user);\n    document.write(user.isAdmin);\n    const {\n      data\n    } = await axios.put(`http://localhost:6039/user/update/${user.id}`, user);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.msg\n    });\n  }\n};","map":{"version":3,"sources":["C:/HUTECH/Nam4/Java/Workspace/java-web/fe/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","login","email","password","dispatch","type","config","headers","data","post","id","payload","localStorage","setItem","JSON","stringify","error","response","msg","logout","removeItem","register","name","detailUser","getState","userLogin","userInfo","get","userDetail","filter","el","console","log","profile","dataUser","updateProfile","info","put","getListUser","token","deleteUser","delete","getUserDetails","updateUserWithAdmin","user","document","write","isAdmin"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_REQUEST,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET\r\n} from '../constants/userConstant';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    // const { data } = await axios.post(\r\n    //   `/api/users/login`,\r\n    //   { email, password },\r\n    //   config,\r\n    // );\r\n    const { data } = await axios.post(`https://javawebdoan.herokuapp.com/user/login`,{ email, password });\r\n    if(!data.id){\r\n     return  dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        // payload:error.response && error.response.data.msg\r\n        payload:\"Sai mật khẩu hoặc tài khoản\",\r\n      });\r\n    }\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({\r\n    type:USER_LIST_RESET\r\n  });\r\n  dispatch({\r\n    type:USER_DELETE_RESET\r\n  })\r\n\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    // const { data } = await axios.post(`/api/users/register`, {\r\n    //   name,\r\n    //   email,\r\n    //   password,\r\n    // });\r\n    const { data } = await axios.post(`https://javawebdoan.herokuapp.com/user/register`, {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailUser=(id) => async (dispatch,getState)=>{\r\n  try {\r\n    dispatch({type:USER_DETAILS_REQUEST});\r\n    const {userLogin:{userInfo}}=getState()\r\n    const { data } = await axios.get(`/users/`)\r\n    const userDetail=data.filter(el=>el.id===id);\r\n    console.log(userDetail);\r\n    const profile=await axios.get(`/profile/${id}`)\r\n    // console.log(data);\r\n    const dataUser={\r\n      ...userDetail[0],\r\n      ...profile.data\r\n    }\r\n    dispatch({\r\n      type:USER_DETAILS_SUCCESS,\r\n      payload:dataUser\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n}\r\n\r\nexport const updateProfile=(info)=>async (dispatch,getState)=>{\r\n  try {\r\n    dispatch({type:USER_UPDATE_PROFILE_REQUEST});\r\n    const {userLogin:{userInfo}}=getState()\r\n    // const config={\r\n    //   headers:{\r\n    //     'Authorization':userInfo.token\r\n    //   }\r\n    // }\r\n    \r\n    const {data}= await axios.put( `https://javawebdoan.herokuapp.com/user/update/${userInfo.id}`,info/*,config*/)\r\n    dispatch({type:USER_UPDATE_PROFILE_SUCCESS})\r\n  } catch (error) {\r\n    dispatch({type:USER_UPDATE_PROFILE_FAIL,payload:error.response && error.response.data.msg})\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getListUser=()=>async (dispatch,getState)=>{\r\n  try {\r\n    dispatch({type:USER_LIST_REQUEST});\r\n    const {userLogin:{userInfo}}=getState()\r\n    const config={\r\n      headers:{\r\n        'Authorization':userInfo.token\r\n      }\r\n    }\r\n    const {data}= await axios.get( `/users`)\r\n    dispatch({type:USER_LIST_SUCCESS,payload:data})\r\n  } catch (error) {\r\n    dispatch({type:USER_LIST_FAIL,payload:error.response && error.response.data.msg})\r\n  }\r\n}\r\n\r\nexport const deleteUser=(id) => async (dispatch,getState)=>{\r\n  try {\r\n    dispatch({type:USER_DELETE_REQUEST});\r\n    const {userLogin:{userInfo}}=getState()\r\n    const config={\r\n      headers:{\r\n        'Authorization':userInfo.token\r\n      }\r\n    }\r\n    const {data} = await axios.delete(`https://javawebdoan.herokuapp.com/user/delete/${id}`,config)\r\n    dispatch({\r\n      type:USER_DELETE_SUCCESS,\r\n      \r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    // const config = {\r\n    //   headers: {\r\n    //     'Authorization':userInfo.token\r\n    //   },\r\n    // }\r\n    \r\n    const { data } = await axios.get(`/users/`)\r\n    const userDetail=data.filter(el=>el.id===id);\r\n    console.log(userDetail);\r\n    const profile=await axios.get(`/profile/${id}`)\r\n    // console.log(data);\r\n    const dataUser={\r\n      ...userDetail[0],\r\n      ...profile.data\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: dataUser,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const updateUserWithAdmin=(user)=>async (dispatch,getState)=>{\r\n  try {\r\n    dispatch({type:USER_UPDATE_REQUEST});\r\n    const {userLogin:{userInfo}}=getState()\r\n    console.log(user);\r\n    document.write(user.isAdmin);\r\n    const {data}= await axios.put( `http://localhost:6039/user/update/${user.id}`,user)\r\n    dispatch({type:USER_UPDATE_SUCCESS,payload:data})\r\n    dispatch({\r\n      type:USER_DETAILS_SUCCESS,\r\n      payload:data\r\n    })\r\n  } catch (error) {\r\n    dispatch({type:USER_LIST_FAIL,payload:error.response && error.response.data.msg})\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}