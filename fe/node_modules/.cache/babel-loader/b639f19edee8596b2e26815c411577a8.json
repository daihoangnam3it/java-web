{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_ALL_REQUEST, ORDER_LIST_ALL_SUCCESS, ORDER_LIST_ALL_FAIL, ORDER_DELIVERED_REQUEST, ORDER_DELIVERED_SUCCESS, ORDER_DELIVERED_FAIL, ORDER_DELIVERED_RESET } from '../constants/orderContanst';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post(`https://javawebdoan.herokuapp.com/order/create`, order);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`https://javawebdoan.herokuapp.com/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const getListOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:6039/order/of/${userInfo.id}`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const getAllListOrder = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_ALL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`https://javawebdoan.herokuapp.com/orders`);\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_ALL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_ALL_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};\nexport const deliveredOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: userInfo.token\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order.id}/delivered`, {}, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      // payload:error.response && error.response.data.msg\n      payload: error.response && error.response.data.msg\n    });\n  }\n};","map":{"version":3,"sources":["C:/HUTECH/Nam4/Java/Workspace/java-web/fe/src/actions/orderAction.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_ALL_REQUEST","ORDER_LIST_ALL_SUCCESS","ORDER_LIST_ALL_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_RESET","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","data","post","payload","error","response","msg","getOrderDetails","id","config","headers","Authorization","token","get","payOrder","orderId","paymentResult","put","getListOrder","getAllListOrder","console","log","deliveredOrder"],"mappings":"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","sourcesContent":["import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_ALL_REQUEST,\r\n  ORDER_LIST_ALL_SUCCESS,\r\n  ORDER_LIST_ALL_FAIL,\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_SUCCESS,\r\n  ORDER_DELIVERED_FAIL,\r\n  ORDER_DELIVERED_RESET,\r\n} from '../constants/orderContanst';\r\nimport axios from 'axios';\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n   \r\n    const { data } = await axios.post(`https://javawebdoan.herokuapp.com/order/create`, order);\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`https://javawebdoan.herokuapp.com/order/${id}`);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config);\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getListOrder = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`http://localhost:6039/order/of/${userInfo.id}`, config);\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const getAllListOrder = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_ALL_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`https://javawebdoan.herokuapp.com/orders`);\r\n    console.log(data);\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_ALL_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliveredOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: userInfo.token,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/orders/${order.id}/delivered`,{},config);\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      // payload:error.response && error.response.data.msg\r\n      payload: error.response && error.response.data.msg,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}